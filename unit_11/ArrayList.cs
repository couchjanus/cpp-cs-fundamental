using System;
// так как класс ArrayList находится в пространстве имен System.Collections, то подключаем его.
using System.Collections;
 
namespace cs
{
     class Program
    {
        static void Main(string[] args)
        {
            // Вначале создаем объект коллекции через конструктор как объект любого другого класса: 
            
            ArrayList list = new ArrayList();

            // При необходимости мы могли бы так же, как и с массивами, 
            // выполнить начальную инициализацию коллекции, 
            // например, ArrayList list = new ArrayList(){1, 2, 5, "string", 7.7};

            // Далее последовательно добавляем разные значения. 
            // Данный класс коллекции, как и большинство других коллекций, 
            // имеет два способа добавления: одиночного объекта через метод Add и набора объектов,
            // например, массива или другой коллекции через метод AddRange

            list.Add(2.3); // заносим в список объект типа double
            list.Add(55); // заносим в список объект типа int
            list.AddRange(new string[] { "Hello", "world" }); // заносим в список строковый массив
 
            // перебор значений
            // Через цикл foreach мы можем пройтись по всем объектам списка. И поскольку данная коллекция хранит разнородные объекты, а не только числа или строки, то в качестве типа перебираемых объектов выбран тип object: foreach (object o in list)

            foreach (object o in list)
            {
                Console.WriteLine(o);
            }
            
            // Многие коллекции, в том числе и ArrayList, реализуют удаление с помощью методов Remove/RemoveAt. В данном случае мы удаляем первый элемент, передавая в метод RemoveAt индекс удаляемого элемента.

            // удаляем первый элемент
            list.RemoveAt(0);
            // переворачиваем список
            list.Reverse();
            // получение элемента по индексу
            Console.WriteLine(list[0]);
            // перебор значений
            // выводим элементы коллекции на экран только уже через цикл for. 
            // В данном случае с перебором коллекций дело обстоит также, как и с массивами. 
            // число элементов коллекции мы можем получить через свойство Count

            for (int i = 0; i < list.Count; i++)
            {
                // С помощью индексатора мы можем получить по индексу элемент коллекции так же, как и в массивах: object firstObj = list[0];
                Console.WriteLine(list[i]);
            }
 
            Console.ReadLine();
        }
    }
}
